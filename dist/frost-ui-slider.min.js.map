{"version":3,"names":["Slider","BaseComponent","constructor","node","options","super","this","_render","value","$","getValue","_node","_options","range","_eventsRange","values","_isArray","split","rangeSeparator","start","end","length","defaultValue","_setValueRange","_events","_setValue","tooltip","_eventsTooltip","_refreshDisabled","disable","setAttribute","disabled","dispose","_tooltip","remove","_container","removeEvent","removeClass","classes","hide","removeAttribute","_slider","_barLow","_barSelection","_barHigh","_handleEnd","_handleStart","_handleActive","_tickContainer","_ticks","enable","_startValue","_endValue","_value","setValue","defaults","min","max","orientation","scale","valueText","rangeText","tickSize","handleSize","handleSizeRatio","sliderSize","verticalHeight","step","tooltipPlacement","low","selection","high","ticks","tickLabels","tickSnapBounds","lockToTicks","rangeHighlights","reversed","disabledOpacity","container","handle","slider","sliderBar","tick","tickFilled","tickLabel","proto","prototype","_checkRangeValue","_handle","isSame","focus","_checkTicks","closest","closestDiff","Number","MAX_VALUE","tickDiff","Math","abs","_clampValue","_clamp","_toStep","_createTooltip","element","spacing","placement","Tooltip","init","appendTo","trigger","show","addEvent","_","dragEvent","mouseDragFactory","e","button","is","pos","getPosition","_updatePercent","x","y","updateValue","_triggerTooltip","triggerEvent","originalValue","detail","currentTarget","getDataset","addEventDelegate","code","ctrlKey","slice","reverse","preventDefault","nearestTo","offset","_updatePercentRange","originalStartValue","originalEndValue","handles","tooltipTriggers","_debounce","type","Object","keys","_stop","target","_getPercent","_inverseLerp","log","_getValue","percent","_lerp","exp","round","_moveHandle","offsetStyle","setStyle","opacity","tabindex","create","class","attributes","role","_renderTicks","append","width","height","_renderBar","_renderRangeHighlights","_renderHandle","addClass","before","style","bar","backgroundColor","transition","sizeStyle","left","top","highlightBar","startPercent","index","entries","tickContainer","dataset","uiValue","bottom","text","transform","push","percentHigh","title","bind","setDataset","uiTitle","refresh","update","_updateTicks","percentStart","percentEnd","percentMid","percentLow","offsetHigh","startTitle","endTitle","rangeTitle","newValue","percentY","percentX","highlight","find","initComponent"],"sources":["../src/slider.js","../src/index.js","../src/prototype/helpers.js","../src/prototype/events.js","../src/prototype/render.js"],"sourcesContent":["import $ from '@fr0st/query';\nimport { BaseComponent } from '@fr0st/ui';\n\n/**\n * Slider Class\n * @class\n */\nexport default class Slider extends BaseComponent {\n    /**\n     * New Slider constructor.\n     * @param {HTMLElement} node The input node.\n     * @param {object} [options] The options to create the Slider with.\n     */\n    constructor(node, options) {\n        super(node, options);\n\n        this._render();\n\n        let value = $.getValue(this._node);\n\n        if (this._options.range) {\n            this._eventsRange();\n\n            const values = $._isArray(value) ?\n                value :\n                `${value}`.split(this._options.rangeSeparator, 2);\n\n            let start; let end;\n            if (values.length === 2) {\n                start = values[0];\n                end = values[1];\n            } else {\n                start = this._options.defaultValue;\n                end = this._options.defaultValue;\n            }\n\n            this._setValueRange(start, end);\n        } else {\n            this._events();\n\n            if (value === '') {\n                value = this._options.defaultValue;\n            }\n\n            this._setValue(value);\n        }\n\n        if (this._options.tooltip === 'show') {\n            this._eventsTooltip();\n        }\n\n        this._refreshDisabled();\n    }\n\n    /**\n     * Disable the Slider.\n     */\n    disable() {\n        $.setAttribute(this._node, { disabled: true });\n        this._refreshDisabled();\n    }\n\n    /**\n     * Dispose the Slider.\n     */\n    dispose() {\n        if (this._tooltip) {\n            this._tooltip.dispose();\n            this._tooltip = null;\n        }\n\n        $.remove(this._container);\n        $.removeEvent(this._node, 'focus.ui.slider');\n        $.removeClass(this._node, this.constructor.classes.hide);\n        $.removeAttribute(this._node, 'tabindex');\n\n        this._container = null;\n        this._slider = null;\n        this._barLow = null;\n        this._barSelection = null;\n        this._barHigh = null;\n        this._handleEnd = null;\n        this._handleStart = null;\n        this._handleActive = null;\n        this._tickContainer = null;\n        this._ticks = null;\n\n        super.dispose();\n    }\n\n    /**\n     * Enable the Slider.\n     */\n    enable() {\n        $.removeAttribute(this._node, 'disabled');\n        this._refreshDisabled();\n    }\n\n    /**\n     * Get the current value(s).\n     * @return {number|array} The current value(s).\n     */\n    getValue() {\n        if (!this._options.range) {\n            return this._value;\n        }\n\n        return [this._startValue, this._endValue];\n    }\n\n    /**\n     * Set the current value(s).\n     * @param {number} start The start value to set.\n     * @param {number} [end] The end value to set.\n     */\n    setValue(start, end) {\n        if (this._options.range) {\n            this._setValueRange(start, end);\n        } else {\n            this._setValue(start);\n        }\n    }\n}\n","import { initComponent } from '@fr0st/ui';\nimport Slider from './slider.js';\nimport { _events, _eventsRange, _eventsTooltip } from './prototype/events.js';\nimport { _checkRangeValue, _checkTicks, _clampValue, _createTooltip, _getPercent, _getValue, _moveHandle, _refreshDisabled, _setValue, _setValueRange, _updatePercent, _updatePercentRange, _updateTicks } from './prototype/helpers.js';\nimport { _render, _renderBar, _renderHandle, _renderRangeHighlights, _renderTicks } from './prototype/render.js';\n\n// Slider default options\nSlider.defaults = {\n    min: 0,\n    max: 10,\n    defaultValue: 0,\n    orientation: 'horizontal',\n    scale: 'linear',\n    valueText: (value) => value,\n    rangeText: (start, end) => `${start} - ${end}`,\n    tickSize: 30,\n    handleSize: 20,\n    handleSizeRatio: .75,\n    sliderSize: 10,\n    verticalHeight: 200,\n    step: 1,\n    tooltip: 'show',\n    tooltipPlacement: null,\n    low: null,\n    selection: 'bg-primary',\n    high: null,\n    ticks: [],\n    tickLabels: [],\n    tickSnapBounds: 0,\n    lockToTicks: false,\n    rangeHighlights: [],\n    range: false,\n    rangeSeparator: ',',\n    reversed: false,\n    disabledOpacity: .5,\n};\n\n// Slider classes\nSlider.classes = {\n    container: 'position-relative my-2',\n    handle: 'bg-body-tertiary border rounded focus-ring position-absolute translate-middle z-2',\n    hide: 'visually-hidden',\n    slider: 'progress position-relative',\n    sliderBar: 'progress-bar position-absolute',\n    tick: 'progress rounded-circle position-absolute translate-middle',\n    tickFilled: 'progress-bar z-1',\n    tickLabel: 'position-absolute p-1',\n};\n\n// Slider prototype\nconst proto = Slider.prototype;\n\nproto._checkRangeValue = _checkRangeValue;\nproto._checkTicks = _checkTicks;\nproto._clampValue = _clampValue;\nproto._createTooltip = _createTooltip;\nproto._events = _events;\nproto._eventsRange = _eventsRange;\nproto._eventsTooltip = _eventsTooltip;\nproto._getPercent = _getPercent;\nproto._getValue = _getValue;\nproto._moveHandle = _moveHandle;\nproto._refreshDisabled = _refreshDisabled;\nproto._render = _render;\nproto._renderBar = _renderBar;\nproto._renderHandle = _renderHandle;\nproto._renderRangeHighlights = _renderRangeHighlights;\nproto._renderTicks = _renderTicks;\nproto._setValue = _setValue;\nproto._setValueRange = _setValueRange;\nproto._updatePercent = _updatePercent;\nproto._updatePercentRange = _updatePercentRange;\nproto._updateTicks = _updateTicks;\n\n// Slider init\ninitComponent('slider', Slider);\n\nexport default Slider;\n","import $ from '@fr0st/query';\nimport { Tooltip } from '@fr0st/ui';\n\n/**\n * Check a value against the current range, and update the active handle.\n * @param {number} value The value to check.\n * @return {object} The new start and end values.\n */\nexport function _checkRangeValue(value) {\n    let start = this._startValue;\n    let end = this._endValue;\n    let handle = this._handle;\n\n    if (value < start) {\n        start = value;\n        handle = this._handleStart;\n    } else if (value > end) {\n        end = value;\n        handle = this._handleEnd;\n    } else if ($.isSame(handle, this._handleStart)) {\n        start = value;\n    } else {\n        end = value;\n    }\n\n    if (!$.isSame(handle, this._handle)) {\n        $.focus(handle);\n    }\n\n    return { start, end };\n};\n\n/**\n * Clamp value to nearest tick (if within bounds).\n * @param {number} value The value to check.\n * @return {number} The new value.\n */\nexport function _checkTicks(value) {\n    let closest;\n    let closestDiff = Number.MAX_VALUE;\n    for (const tick of this._options.ticks) {\n        const tickDiff = Math.abs(tick - value);\n        if (tickDiff < closestDiff && (this._options.lockToTicks || tickDiff < this._options.tickSnapBounds)) {\n            closestDiff = tickDiff;\n            closest = tick;\n        }\n    };\n\n    if (closest) {\n        return closest;\n    }\n\n    return value;\n};\n\n/**\n * Clamp a value to a step-size, and between a min and max value.\n * @param {number} value The value to clamp.\n * @return {number} The clamped value.\n */\nexport function _clampValue(value) {\n    value = $._clamp(value, this._options.min, this._options.max);\n    value = $._toStep(value, this._options.step);\n\n    return value;\n};\n\n/**\n * Create a tooltip on an element.\n * @param {HTMLElement} element The element to attach the tooltip to.\n * @param {number} [spacing=0] Amount of spacing for the tooltip.\n * @return {UI.Tooltip} The tooltip.\n */\nexport function _createTooltip(element, spacing = 0) {\n    let placement;\n    if (this._options.tooltipPlacement) {\n        placement = this._options.tooltipPlacement;\n    } else if (this._options.orientation === 'vertical') {\n        placement = 'right';\n    } else {\n        placement = 'top';\n    }\n\n    const tooltip = Tooltip.init(element, {\n        appendTo: 'body',\n        trigger: '',\n        spacing,\n        placement,\n    });\n\n    if (this._options.tooltip === 'always') {\n        tooltip.show();\n    }\n\n    return tooltip;\n};\n\n/**\n * Convert a value to percent.\n * @param {number} value The value to convert.\n * @return {number} The percent.\n */\nexport function _getPercent(value) {\n    if (this._options.scale !== 'logarithmic') {\n        return $._inverseLerp(this._options.min, this._options.max, value) * 100;\n    }\n\n    if (this._options.min === this._options.max) {\n        return 0;\n    }\n\n    const offset = 1 - this._options.min;\n    const max = Math.log(this._options.max + offset);\n    const min = Math.log(this._options.min + offset);\n    const v = Math.log(value + offset);\n    return 100 * (v - min) / (max - min);\n};\n\n/**\n * Convert a percent to value.\n * @param {number} percent The percent to convert.\n * @return {number} The value.\n */\nexport function _getValue(percent) {\n    if (this._options.scale !== 'logarithmic') {\n        return $._lerp(this._options.min, this._options.max, percent / 100);\n    }\n\n    const offset = 1 - this._options.min;\n    const min = Math.log(this._options.min + offset);\n    const max = Math.log(this._options.max + offset);\n\n    const value = Math.exp(min + (max - min) * percent / 100) - offset;\n\n    if (Math.round(value) === max) {\n        return max;\n    }\n\n    return this._options.min + value;\n};\n\n/**\n * Move a handle by a percent.\n * @param {HTMLElement} handle The handle to move.\n * @param {number} percent The amount to move the handle.\n */\nexport function _moveHandle(handle, percent) {\n    if (this._options.reversed) {\n        percent = 100 - percent;\n    }\n\n    let offsetStyle;\n    if (this._options.orientation === 'vertical') {\n        offsetStyle = 'top';\n    } else {\n        offsetStyle = 'left';\n    }\n\n    $.setStyle(handle, {\n        [offsetStyle]: `${percent}%`,\n    });\n};\n\n/**\n * Refresh the disabled styling.\n */\nexport function _refreshDisabled() {\n    const disabled = $.is(this._node, ':disabled');\n\n    const handles = this._options.range ?\n        [this._handleStart, this._handleEnd] :\n        this._handle;\n\n    if (disabled) {\n        $.setStyle(this._container, {\n            opacity: this._options.disabledOpacity,\n        });\n        $.setAttribute(handles, {\n            tabindex: -1,\n        });\n    } else {\n        $.setStyle(this._container, {\n            opacity: '',\n        });\n        $.removeAttribute(handles, 'tabindex');\n    }\n\n    $.setAttribute(handles, { 'aria-disabled': disabled });\n};\n\n/**\n * Set the slider value.\n * @param {number} value The value.\n * @param {object} [options] Options for updating the value.\n * @param  {Boolean} [options.updateValue=true] Whether to update the input value.\n */\nexport function _setValue(value, { updateValue = true } = {}) {\n    value = this._clampValue(value);\n\n    const percent = this._getPercent(value);\n    const percentHigh = 100 - percent;\n\n    let sizeStyle;\n    let offsetStyle;\n    if (this._options.orientation === 'vertical') {\n        sizeStyle = 'height';\n        offsetStyle = this._options.reversed ? 'bottom' : 'top';\n    } else {\n        sizeStyle = 'width';\n        offsetStyle = this._options.reversed ? 'right' : 'left';\n    }\n\n    $.setStyle(this._barSelection, {\n        [sizeStyle]: `${percent}%`,\n    });\n    $.setStyle(this._barHigh, {\n        [sizeStyle]: `${percentHigh}%`,\n        [offsetStyle]: `${percent}%`,\n    });\n\n    if (value !== this._value) {\n        const title = this._options.valueText.bind(this)(value);\n\n        $.setAttribute(this._handle, {\n            'aria-valuenow': value,\n            'aria-valuetext': title,\n        });\n\n        if (this._options.tooltip) {\n            $.setDataset(this._handle, { uiTitle: title });\n        }\n\n        this._moveHandle(this._handle, percent);\n        this._value = value;\n    }\n\n    if (this._options.tooltip) {\n        this._tooltip.refresh();\n        this._tooltip.update();\n    }\n\n    this._updateTicks();\n\n    if (!updateValue) {\n        return;\n    }\n\n    if (`${value}` === $.getValue(this._node)) {\n        return;\n    }\n\n    $.setValue(this._node, value);\n\n    $.triggerEvent(this._node, 'change.ui.slider');\n};\n\n/**\n * Set the slider range values.\n * @param {number} start The start value.\n * @param {number} end The end value.\n * @param {object} [options] Options for updating the value.\n * @param  {Boolean} [options.updateValue=true] Whether to update the input value.\n */\nexport function _setValueRange(start, end, { updateValue = true } = {}) {\n    start = this._clampValue(start);\n    end = this._clampValue(end);\n\n    const percentStart = this._getPercent(start);\n    const percentEnd = this._getPercent(end);\n\n    const percentMid = percentEnd - percentStart;\n    const percentLow = percentStart;\n    const offsetHigh = percentLow + percentMid;\n    const percentHigh = 100 - offsetHigh;\n\n    let sizeStyle;\n    let offsetStyle;\n    if (this._options.orientation === 'vertical') {\n        sizeStyle = 'height';\n        offsetStyle = this._options.reversed ? 'bottom' : 'top';\n    } else {\n        sizeStyle = 'width';\n        offsetStyle = this._options.reversed ? 'right' : 'left';\n    }\n\n    $.setStyle(this._barLow, {\n        [sizeStyle]: `${percentLow}%`,\n    });\n    $.setStyle(this._barSelection, {\n        [sizeStyle]: `${percentMid}%`,\n        [offsetStyle]: `${percentLow}%`,\n    });\n    $.setStyle(this._barHigh, {\n        [sizeStyle]: `${percentHigh}%`,\n        [offsetStyle]: `${offsetHigh}%`,\n    });\n\n    if (start !== this._startValue) {\n        const startTitle = this._options.valueText.bind(this)(start);\n\n        $.setAttribute(this._handleStart, {\n            'aria-valuenow': start,\n            'aria-valuetext': startTitle,\n        });\n\n        this._moveHandle(this._handleStart, percentStart);\n        this._startValue = start;\n    }\n\n    if (end !== this._endValue) {\n        const endTitle = this._options.valueText.bind(this)(end);\n\n        $.setAttribute(this._handleEnd, {\n            'aria-valuenow': end,\n            'aria-valuetext': endTitle,\n        });\n\n        this._moveHandle(this._handleEnd, percentEnd);\n        this._endValue = end;\n    }\n\n    if (this._options.tooltip) {\n        const rangeTitle = this._options.rangeText.bind(this)(start, end);\n\n        $.setDataset(this._barSelection, { uiTitle: rangeTitle });\n\n        this._tooltip.refresh();\n        this._tooltip.update();\n    }\n\n    this._updateTicks();\n\n    if (!updateValue) {\n        return;\n    }\n\n    const newValue = `${start}${this._options.rangeSeparator}${end}`;\n\n    if (newValue === $.getValue(this._node)) {\n        return;\n    }\n\n    $.setValue(this._node, newValue);\n\n    $.triggerEvent(this._node, 'change.ui.slider');\n};\n\n/**\n * Update the value based on slider position.\n * @param {number} x The x position.\n * @param {number} y The y position.\n * @param {object} [options] Options for updating the value.\n * @param  {Boolean} [options.updateValue=true] Whether to update the input value.\n */\nexport function _updatePercent(x, y, { updateValue = true } = {}) {\n    let percent;\n    if (this._options.orientation === 'vertical') {\n        percent = $.percentY(this._slider, y, { offset: true });\n    } else {\n        percent = $.percentX(this._slider, x, { offset: true });\n    }\n\n    if (this._options.reversed) {\n        percent = 100 - percent;\n    }\n\n    let value = this._getValue(percent);\n    value = this._checkTicks(value);\n\n    this._setValue(value, { updateValue });\n};\n\n/**\n * Update the range value based on slider position.\n * @param {number} x The x position.\n * @param {number} y The y position.\n * @param {object} [options] Options for updating the value.\n * @param  {Boolean} [options.updateValue=true] Whether to update the input value.\n */\nexport function _updatePercentRange(x, y, { updateValue = true } = {}) {\n    let percent;\n    if (this._options.orientation === 'vertical') {\n        percent = $.percentY(this._slider, y, { offset: true });\n    } else {\n        percent = $.percentX(this._slider, x, { offset: true });\n    }\n\n    if (this._options.reversed) {\n        percent = 100 - percent;\n    }\n\n    let value = this._getValue(percent);\n    value = this._checkTicks(value);\n\n    const { start, end } = this._checkRangeValue(value);\n\n    this._setValueRange(start, end, { updateValue });\n};\n\n/**\n * Update tick styling.\n */\nexport function _updateTicks() {\n    let start;\n    let end;\n    if (this._options.range) {\n        start = this._startValue;\n        end = this._endValue;\n    } else {\n        start = this._options.min;\n        end = this._value;\n    }\n\n    for (const tick of this._ticks) {\n        const value = $.getDataset(tick, 'uiValue');\n        const highlight = this._options.rangeHighlights.find((range) => value >= range.start && value <= range.end);\n\n        let style = null;\n\n        $.setAttribute(tick, { class: '' });\n        $.addClass(tick, this.constructor.classes.tick);\n\n        if (value < start) {\n            style = this._options.low;\n        } else if (value > end) {\n            style = this._options.high;\n        } else {\n            $.addClass(tick, this.constructor.classes.tickFilled);\n            style = this._options.selection;\n        }\n\n        if (highlight) {\n            style = highlight.style;\n        }\n\n        if (style) {\n            $.addClass(tick, style);\n        }\n    }\n};\n","import $ from '@fr0st/query';\nimport { getPosition } from '@fr0st/ui';\n\n/**\n * Attach events for the Slider.\n */\nexport function _events() {\n    $.addEvent(this._node, 'focus.ui.slider', (_) => {\n        $.focus(this._handle);\n    });\n\n    const downEvent = (e) => {\n        if (\n            e.button ||\n            $.is(this._node, ':disabled')\n        ) {\n            return false;\n        }\n\n        const pos = getPosition(e);\n\n        $.focus(this._handle);\n\n        this._updatePercent(pos.x, pos.y, { updateValue: false });\n\n        if (this._options.tooltip === 'show') {\n            this._triggerTooltip('drag');\n        }\n\n        $.triggerEvent(this._node, 'slide.ui.slider');\n    };\n\n    const moveEvent = (e) => {\n        const originalValue = this._value;\n\n        const pos = getPosition(e);\n        this._updatePercent(pos.x, pos.y, { updateValue: false });\n\n        if (originalValue === this._value) {\n            return;\n        }\n\n        $.triggerEvent(this._node, 'sliding.ui.slider', {\n            detail: this._value,\n        });\n    };\n\n    const upEvent = (e) => {\n        if (this._options.tooltip === 'show') {\n            this._triggerTooltip('drag', false);\n        }\n\n        if ($.is(e.currentTarget, '[data-ui-value]')) {\n            const value = $.getDataset(e.currentTarget, 'uiValue');\n            this._setValue(value);\n        } else {\n            const pos = getPosition(e);\n            this._updatePercent(pos.x, pos.y);\n        }\n\n        $.focus(this._handle);\n        $.triggerEvent(this._node, 'slid.ui.slider', {\n            detail: this._value,\n        });\n    };\n\n    const dragEvent = $.mouseDragFactory(downEvent, moveEvent, upEvent);\n\n    $.addEvent(this._handle, 'mousedown.ui.slider touchstart.ui.slider', dragEvent);\n    $.addEvent(this._slider, 'mousedown.ui.slider touchstart.ui.slider', dragEvent);\n    $.addEventDelegate(this._container, 'mousedown.ui.slider touchstart.ui.slider', '[data-ui-value]', dragEvent);\n\n    $.addEvent(this._handle, 'keydown.ui.slider', (e) => {\n        if ($.is(this._node, ':disabled')) {\n            return;\n        }\n\n        let value = this._value;\n\n        const originalValue = value;\n\n        switch (e.code) {\n            case 'ArrowLeft':\n            case 'ArrowDown':\n                if (e.ctrlKey) {\n                    for (const tick of this._options.ticks) {\n                        if (tick >= originalValue) {\n                            break;\n                        }\n\n                        value = tick;\n                    }\n\n                    if (value === originalValue) {\n                        value = this._options.min;\n                    }\n                } else {\n                    value -= this._options.step;\n                }\n                break;\n            case 'ArrowRight':\n            case 'ArrowUp':\n                if (e.ctrlKey) {\n                    for (const tick of this._options.ticks.slice().reverse()) {\n                        if (tick <= originalValue) {\n                            break;\n                        }\n\n                        value = tick;\n                    }\n\n                    if (value === originalValue) {\n                        value = this._options.max;\n                    }\n                } else {\n                    value += this._options.step;\n                }\n                break;\n            case 'Home':\n                value = this._options.min;\n                break;\n            case 'End':\n                value = this._options.max;\n                break;\n            default:\n                return;\n        }\n\n        e.preventDefault();\n\n        this._setValue(value);\n    });\n};\n\n/**\n * Attach events for the Slider.\n */\nexport function _eventsRange() {\n    $.addEvent(this._node, 'focus.ui.slider', (_) => {\n        $.focus(this._handleStart);\n    });\n\n    const downEvent = (e) => {\n        if (\n            e.button ||\n            $.is(this._node, ':disabled')\n        ) {\n            return false;\n        }\n\n        const pos = getPosition(e);\n        const handle = $.nearestTo([this._handleStart, this._handleEnd], pos.x, pos.y, { offset: true });\n\n        $.focus(handle);\n\n        this._updatePercentRange(pos.x, pos.y, { updateValue: false });\n\n        if (this._options.tooltip === 'show') {\n            this._triggerTooltip('drag');\n        }\n\n        $.triggerEvent(this._node, 'slide.ui.slider');\n    };\n\n    const moveEvent = (e) => {\n        const originalStartValue = this._startValue;\n        const originalEndValue = this._endValue;\n\n        const pos = getPosition(e);\n        this._updatePercentRange(pos.x, pos.y, { updateValue: false });\n\n        if (originalStartValue === this._startValue && originalEndValue === this._endValue) {\n            return;\n        }\n\n        $.triggerEvent(this._node, 'sliding.ui.slider', {\n            detail: {\n                start: this._startValue,\n                end: this._endValue,\n            },\n        });\n    };\n\n    const upEvent = (e) => {\n        if (this._options.tooltip === 'show') {\n            this._triggerTooltip('drag', false);\n        }\n\n        if ($.is(e.currentTarget, '[data-ui-value]')) {\n            const value = $.getDataset(e.currentTarget, 'uiValue');\n            this._setValue(value);\n        } else {\n            const pos = getPosition(e);\n            this._updatePercentRange(pos.x, pos.y);\n        }\n\n        $.focus(this._handle);\n        $.triggerEvent(this._node, 'slid.ui.slider', {\n            detail: {\n                start: this._startValue,\n                end: this._endValue,\n            },\n        });\n    };\n\n    const dragEvent = $.mouseDragFactory(downEvent, moveEvent, upEvent);\n\n    const handles = [this._handleStart, this._handleEnd];\n\n    $.addEvent(handles, 'mousedown.ui.slider touchstart.ui.slider', dragEvent);\n    $.addEvent(this._slider, 'mousedown.ui.slider touchstart.ui.slider', dragEvent);\n    $.addEventDelegate(this._container, 'mousedown.ui.slider touchstart.ui.slider', '[data-ui-value]', dragEvent);\n\n    $.addEvent(handles, 'focus.ui.slider', (e) => {\n        this._handle = e.currentTarget;\n    });\n\n    $.addEvent(handles, 'keydown.ui.slider', (e) => {\n        if ($.is(this._node, ':disabled')) {\n            return;\n        }\n\n        const isStart = $.isSame(this._handleStart, e.currentTarget);\n\n        let value = isStart ?\n            this._startValue :\n            this._endValue;\n\n        const originalValue = value;\n\n        switch (e.code) {\n            case 'ArrowLeft':\n            case 'ArrowDown':\n                if (e.ctrlKey) {\n                    for (const tick of this._options.ticks) {\n                        if (tick >= originalValue) {\n                            break;\n                        }\n\n                        value = tick;\n                    }\n\n                    if (value === originalValue) {\n                        value = this._options.min;\n                    }\n                } else {\n                    value -= this._options.step;\n                }\n                break;\n            case 'ArrowRight':\n            case 'ArrowUp':\n                if (e.ctrlKey) {\n                    for (const tick of this._options.ticks.slice().reverse()) {\n                        if (tick <= originalValue) {\n                            break;\n                        }\n\n                        value = tick;\n                    }\n\n                    if (value === originalValue) {\n                        value = this._options.max;\n                    }\n                } else {\n                    value += this._options.step;\n                }\n                break;\n            case 'Home':\n                value = this._options.min;\n                break;\n            case 'End':\n                value = this._options.max;\n                break;\n            default:\n                return;\n        }\n\n        e.preventDefault();\n\n        const { start, end } = this._checkRangeValue(value);\n\n        this._setValueRange(start, end);\n    });\n};\n\n/**\n * Attach events for the Slider tooltip.\n */\nexport function _eventsTooltip() {\n    const tooltipTriggers = {};\n\n    this._triggerTooltip = $._debounce((type, show = true) => {\n        if (show) {\n            if (!Object.keys(tooltipTriggers).length) {\n                this._tooltip._stop();\n                this._tooltip.show();\n            }\n\n            tooltipTriggers[type] = true;\n        } else {\n            delete tooltipTriggers[type];\n\n            if (!Object.keys(tooltipTriggers).length) {\n                this._tooltip._stop();\n                this._tooltip.hide();\n            }\n        }\n    });\n\n    $.addEvent(this._container, 'mouseenter.ui.slider', (e) => {\n        if (!$.isSame(e.target, this._container)) {\n            return;\n        }\n\n        this._triggerTooltip('hover');\n    });\n\n    $.addEvent(this._container, 'mouseleave.ui.slider', (e) => {\n        if (!$.isSame(e.target, this._container)) {\n            return;\n        }\n\n        this._triggerTooltip('hover', false);\n    });\n\n    const handles = this._options.range ?\n        [this._handleStart, this._handleEnd] :\n        this._handle;\n\n    $.addEvent(handles, 'focus.ui.slider', (_) => {\n        this._triggerTooltip('focus');\n    });\n\n    $.addEvent(handles, 'blur.ui.slider', (_) => {\n        this._triggerTooltip('focus', false);\n    });\n};\n","import $ from '@fr0st/query';\n\n/**\n * Render the slider.\n */\nexport function _render() {\n    this._container = $.create('div', {\n        class: this.constructor.classes.container,\n        attributes: {\n            role: 'none',\n        },\n    });\n\n    this._renderTicks();\n\n    this._slider = $.create('div', {\n        class: this.constructor.classes.slider,\n    });\n    $.append(this._container, this._slider);\n\n    if (this._options.orientation === 'vertical') {\n        $.setStyle(this._slider, {\n            width: `${this._options.sliderSize}px`,\n            height: `${this._options.verticalHeight}px`,\n        });\n    } else {\n        $.setStyle(this._slider, {\n            width: '100%',\n            height: `${this._options.sliderSize}px`,\n        });\n    }\n\n    if (this._options.range) {\n        this._barLow = this._renderBar(this._options.low);\n        $.append(this._slider, this._barLow);\n    }\n\n    this._barSelection = this._renderBar(this._options.selection);\n    $.append(this._slider, this._barSelection);\n\n    this._barHigh = this._renderBar(this._options.high);\n    $.append(this._slider, this._barHigh);\n\n    this._renderRangeHighlights();\n\n    if (this._options.range) {\n        this._handleStart = this._renderHandle();\n        $.append(this._container, this._handleStart);\n\n        this._handleEnd = this._renderHandle();\n        $.append(this._container, this._handleEnd);\n    } else {\n        this._handle = this._renderHandle();\n        $.append(this._container, this._handle);\n    }\n\n    if (this._options.tooltip) {\n        if (this._options.range) {\n            this._tooltip = this._createTooltip(this._barSelection, (this._options.handleSize - this._options.sliderSize) / 2);\n        } else {\n            this._tooltip = this._createTooltip(this._handle);\n        }\n    }\n\n    // hide the input node\n    $.addClass(this._node, this.constructor.classes.hide);\n    $.setAttribute(this._node, { tabindex: -1 });\n\n    $.before(this._node, this._container);\n};\n\n/**\n * Render a progress bar.\n * @param {string} [style] The background style.\n * @return {HTMLElement} The progress bar.\n */\nexport function _renderBar(style) {\n    const bar = $.create('div', {\n        class: this.constructor.classes.sliderBar,\n        style: {\n            backgroundColor: 'transparent',\n            transition: 'none',\n        },\n    });\n\n    if (style) {\n        $.addClass(bar, style);\n    }\n\n    let sizeStyle;\n    let offsetStyle;\n    if (this._options.orientation === 'vertical') {\n        sizeStyle = 'width';\n        offsetStyle = this._options.reversed ? 'bottom' : 'top';\n    } else {\n        sizeStyle = 'height';\n        offsetStyle = this._options.reversed ? 'right' : 'left';\n    }\n\n    $.setStyle(bar, {\n        [sizeStyle]: '100%',\n        [offsetStyle]: '0',\n    });\n\n    return bar;\n};\n\n/**\n * Render a handle.\n * @return {HTMLElement} The handle.\n */\nexport function _renderHandle() {\n    const handle = $.create('button', {\n        class: this.constructor.classes.handle,\n        attributes: {\n            'type': 'button',\n            'role': 'slider',\n            'aria-valuemin': this._options.min,\n            'aria-valuemax': this._options.max,\n            'aria-valuenow': '',\n            'aria-valuetext': '',\n        },\n    });\n\n    if (this._options.orientation === 'vertical') {\n        $.setStyle(handle, {\n            width: `${this._options.handleSize}px`,\n            height: `${this._options.handleSize * this._options.handleSizeRatio}px`,\n            left: `${this._options.sliderSize / 2}px`,\n        });\n    } else {\n        $.setStyle(handle, {\n            width: `${this._options.handleSize * this._options.handleSizeRatio}px`,\n            height: `${this._options.handleSize}px`,\n            top: `${this._options.sliderSize / 2}px`,\n        });\n    }\n\n    return handle;\n};\n\n/**\n * Render highlight ranges.\n */\nexport function _renderRangeHighlights() {\n    for (const range of this._options.rangeHighlights) {\n        const highlightBar = this._renderBar(range.style);\n\n        const startPercent = this._getPercent(range.start);\n        const endPercent = this._getPercent(range.end);\n        const percent = endPercent - startPercent;\n\n        if (this._options.orientation === 'vertical') {\n            $.setStyle(highlightBar, {\n                height: `${percent}%`,\n                top: `${startPercent}`,\n            });\n        } else {\n            $.setStyle(highlightBar, {\n                width: `${percent}%`,\n                left: `${startPercent}%`,\n            });\n        }\n\n        $.append(this._slider, highlightBar);\n    }\n};\n\n/**\n * Render slider ticks.\n */\nexport function _renderTicks() {\n    this._tickContainer = $.create('div');\n    this._ticks = [];\n\n    for (const [index, value] of this._options.ticks.entries()) {\n        const tickContainer = $.create('div');\n\n        const tick = $.create('div', {\n            dataset: {\n                uiValue: value,\n            },\n        });\n\n        let percent = this._getPercent(value);\n\n        if (this._options.reversed) {\n            percent = 100 - percent;\n        }\n\n        $.setStyle(tick, {\n            width: `${this._options.tickSize}px`,\n            height: `${this._options.tickSize}px`,\n        });\n\n        if (this._options.orientation === 'vertical') {\n            $.setStyle(tick, {\n                bottom: `${percent}%`,\n                left: '50%',\n            });\n        } else {\n            $.setStyle(tick, {\n                top: '50%',\n                left: `${percent}%`,\n            });\n        }\n\n        $.append(tickContainer, tick);\n\n        if (this._options.tickLabels && this._options.tickLabels[index]) {\n            const tickLabel = $.create('small', {\n                text: this._options.tickLabels[index],\n                class: this.constructor.classes.tickLabel,\n            });\n\n            if (this._options.orientation === 'vertical') {\n                $.setStyle(tickLabel, {\n                    top: `${percent}%`,\n                    left: `${this._options.tickSize / 2}px`,\n                    transform: 'translateY(-50%)',\n                });\n            } else {\n                $.setStyle(tickLabel, {\n                    top: `${this._options.tickSize / 2}px`,\n                    left: `${percent}%`,\n                    transform: 'translateX(-50%)',\n                });\n            }\n\n            $.append(tickContainer, tickLabel);\n        }\n\n        $.append(this._tickContainer, tickContainer);\n\n        this._ticks.push(tick);\n    }\n\n    $.append(this._container, this._tickContainer);\n};\n"],"mappings":"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"}